networks:
  kafka-spark:
    name: kafka-spark
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1

services:
  broker:
    image: apache/kafka:3.9.0
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # Update listeners to bind to all network interfaces
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,EXTERNAL://broker:29092,CONTROLLER://broker:9093
      # Advertise correct hostname or IP for external access
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,EXTERNAL://broker:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - 29092:29092  # Expose Kafka broker port to host
      - 9092:9092
    networks:
      kafka-spark:
        ipv4_address: 172.18.0.8

  spark-master:
    container_name: da-spark-master
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    env_file:
      - .env.spark
    ports:
      - '9090:8080'
      - '7077:7077'
    networks:
      kafka-spark:
        ipv4_address: 172.18.0.10

  spark-history-server:
    container_name: da-spark-history
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'
    networks:
      kafka-spark:
        ipv4_address: 172.18.0.9

  spark-worker-1:
#    container_name: da-spark-worker
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    networks:
      kafka-spark:
        ipv4_address: 172.18.0.11

  spark-worker-2:
#    container_name: da-spark-worker
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    networks:
      kafka-spark:
        ipv4_address: 172.18.0.12

  spark-worker-3:
#    container_name: da-spark-worker
    build:
      context: .
      dockerfile: ./Dockerfile
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./book_data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    networks:
      kafka-spark:
        ipv4_address: 172.18.0.13

volumes:
  spark-logs:
